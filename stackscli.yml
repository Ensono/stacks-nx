# Configuration file for setting up the project

framework:
  name: node
  commands:
    - name: node
      version: ">= 18.13"

# Pipeline files
pipeline:
  # Pipeline files for ADO
  - type: azdo
    files:
      - name: build
        path: build/azDevOps/azure/deploy-infrastructure.yml
      - name: variable
        path: build/azDevOps/azure/pipeline-vars.yml
    templates:
      - name: variable
        path: build/azDevOps/azure/pipeline-vars.template.yml
    replacements:
      - pattern: ^.*stacks-credentials-nonprod-kv$
        value: ""

# The init stage are things that are required to run before the template is run
init:
  operations:
    - action: cmd
      cmd: npx
      args: --yes
        @ensono-stacks/create-stacks-workspace@latest {{ .Project.Name }}
        --dir={{ .Project.Directory.WorkingDir }}
        --nxVersion={{ .Project.Framework.Version }}
        --preset={{ .Project.Framework.Option }}
        --business.company={{ .Input.Business.Company }}
        --business.domain={{ .Input.Business.Domain }}
        --business.component={{ .Input.Business.Component }}
        --cloud.platform={{ .Input.Cloud.Platform }}
        --cloud.region={{ .Project.Cloud.Region }}
        --cloud.group={{ .Project.Cloud.ResourceGroup }}
        --domain.internal={{ .Input.Network.Base.Domain.Internal }}
        --domain.external={{ .Input.Network.Base.Domain.External }}
        --pipeline={{ .Input.Pipeline }}
        --terraform.group={{ .Input.Terraform.Backend.Group }}
        --terraform.storage={{ .Input.Terraform.Backend.Storage }}
        --terraform.container={{ .Input.Terraform.Backend.Container }}
        --vcs.type={{ .Project.SourceControl.Type }}
        --vcs.url={{ .Project.SourceControl.URL }}
        --overwrite
        --skipGit
        --no-nxCloud
        --no-interactive
      desc: Create "stacks-nx" Workspace
      applyProperties: true
